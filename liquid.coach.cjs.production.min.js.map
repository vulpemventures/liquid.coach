{"version":3,"file":"liquid.coach.cjs.production.min.js","sources":["../src/components/Layout.tsx","../src/elements/InputWithCopy.tsx","../src/helpers/xpub.ts","../src/helpers/inputs.ts","../src/helpers/index.ts","../src/components/Load.tsx","../src/elements/TextWithCopy.tsx","../src/components/UpdateTx.tsx","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/wallet/index.ts","../src/components/CreateTx.tsx","../src/components/DecodeTx.tsx","../src/elements/Circle.tsx","../src/elements/Balances.tsx","../src/elements/Spinner.tsx","../src/components/Wallet.tsx","../src/index.tsx","../src/App.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Props {\n  title?: string;\n  onClean?(): void;\n  onExplorer?(explorer: string): void;\n  showExplorer: boolean;\n}\n\nclass Layout extends React.Component<Props> {\n  changeUrl() {\n    const errorMsg = 'Not valid endpoint';\n    let url = prompt('Custom Electrs REST endpoint to use');\n    try {\n      if (!url || typeof url != 'string' || url.length <= 0) {\n        throw new Error();\n      }\n      new URL(url!);\n      if (url.includes('localhost')) url = `http://${url}`;\n      this.props.onExplorer!(url!);\n    } catch (ignore) {\n      alert(errorMsg);\n    }\n  }\n\n  render() {\n    const withCleanButton = this.props.onClean ? (\n      <span className=\"button is-pulled-right\" onClick={this.props.onClean}>\n        Reset\n      </span>\n    ) : null;\n\n    const withExplorer = this.props.showExplorer ? (\n      <span className=\"button is-pulled-right\" onClick={() => this.changeUrl()}>\n        Explorer\n      </span>\n    ) : null;\n\n    const withTitle = this.props.title ? (\n      <section className=\"hero is-light\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-8 is-desktop is-offset-2 has-text-centered\">\n                <h1 className=\"title\">{this.props.title}</h1>\n              </div>\n              <div className=\"column is-1 has-text-centered\">\n                {withExplorer}\n              </div>\n              <div className=\"column is-1 has-text-centered\">\n                {withCleanButton}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    ) : null;\n\n    return (\n      <div style={{ minHeight: '100vh', position: 'relative' }}>\n        {withTitle}\n        <div\n          style={{\n            paddingTop: '5rem',\n            paddingRight: '1rem',\n            paddingLeft: '1rem',\n            paddingBottom: '5rem',\n          }}\n        >\n          {this.props.children}\n        </div>\n        <footer\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            height: '5rem',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <p>\n            <a\n              href=\"https://vulpem.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              © Vulpem Ventures OU\n            </a>\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport { copyToClipboard } from 'copy-lite';\n\ninterface Props {\n  value: string;\n  bgColor?: string;\n}\nexport const InputWithCopy: React.FunctionComponent<Props> = props => {\n  const [copySuccess, setCopySuccess] = useState('');\n\n  const copy = () => {\n    copyToClipboard(props.value);\n    setCopySuccess('👌 Copied!');\n  };\n\n  return (\n    <div className={`notification ${props.bgColor || 'is-success'}`}>\n      <button className=\"button is-pulled-right\" onClick={copy}>\n        Copy\n      </button>\n      <p className=\"subtitle\">{copySuccess}</p>\n      <br />\n      <p className=\"subtitle\">{props.value}</p>\n    </div>\n  );\n};\n\nexport default InputWithCopy;\n","// This has benne taken from https://github.com/Casa/xpub-converter/blob/master/js/xpubConvert.js\n/*\n  This script uses version bytes as described in SLIP-132\n  https://github.com/satoshilabs/slips/blob/master/slip-0132.md\n*/\nimport b58 from 'bs58check';\nimport * as bip32 from 'bip32';\nimport { address, Network, ECPair } from 'liquidjs-lib';\n\nconst prefixes = new Map([\n  ['xpub', '0488b21e'],\n  ['ypub', '049d7cb2'],\n  ['Ypub', '0295b43f'],\n  ['zpub', '04b24746'],\n  ['Zpub', '02aa7ed3'],\n  ['tpub', '043587cf'],\n  ['upub', '044a5262'],\n  ['Upub', '024289ef'],\n  ['vpub', '045f1cf6'],\n  ['Vpub', '02575483'],\n]);\n\n/*\n * This function takes an extended public key (with any version bytes, it doesn't need to be an xpub)\n * and converts it to an extended public key formatted with the desired version bytes\n * @param xpub: an extended public key in base58 format. Example: xpub6CpihtY9HVc1jNJWCiXnRbpXm5BgVNKqZMsM4XqpDcQigJr6AHNwaForLZ3kkisDcRoaXSUms6DJNhxFtQGeZfWAQWCZQe1esNetx5Wqe4M\n * @param targetFormat: a string representing the desired prefix; must exist in the \"prefixes\" mapping defined above. Example: Zpub\n */\nexport function changeVersionBytes(xpub: string, targetFormat: string) {\n  if (!prefixes.has(targetFormat)) {\n    return 'Invalid target version';\n  }\n\n  // trim whitespace\n  xpub = xpub.trim();\n\n  try {\n    let data = b58.decode(xpub);\n    data = data.slice(4);\n    data = Buffer.concat([\n      Buffer.from(prefixes.get(targetFormat)!, 'hex'),\n      data,\n    ]);\n    return b58.encode(data);\n  } catch (err) {\n    throw new Error(\n      \"Invalid extended public key! Please double check that you didn't accidentally paste extra data.\"\n    );\n  }\n}\n\nexport function isValidXpub(xpub: string, network: Network): Boolean {\n  try {\n    bip32.fromBase58(xpub, network);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isValidAddress(value: string, network: Network) {\n  try {\n    address.toOutputScript(value, network);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isValidBlindingKey(value: string): boolean {\n  try {\n    ECPair.fromPrivateKey(Buffer.from(value, 'hex'));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import { address, Network, confidential, networks } from 'liquidjs-lib';\n\nfunction isValidConfidentialAddress(value: string): boolean {\n  try {\n    address.fromConfidential(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function validate(\n  value: any,\n  type: string,\n  network: Network = networks.regtest\n): boolean {\n  switch (type) {\n    case 'asset':\n      if (value.length !== 64) {\n        return false;\n      }\n      return true;\n    case 'address':\n      try {\n        if (isValidConfidentialAddress(value))\n          throw new Error('Unconfidential only');\n        if (value !== 'LBTC_FEES') address.toOutputScript(value, network);\n      } catch (ignore) {\n        console.error(ignore);\n        return false;\n      }\n      return true;\n    case 'amount':\n      try {\n        confidential.satoshiToConfidentialValue(Number(value));\n      } catch (ignore) {\n        return false;\n      }\n      return true;\n    default:\n      return false;\n  }\n}\n","export * from './xpub';\nexport * from './inputs';\n\n/**\n * Shortens a long string to a human-friendly abbreviated one.\n *\n * A string like 2ed982c220fed6c9374e63804670fc16bd481b8f provides no more value to a human than\n * a shortened version like 2ed9...1b8f. However, screen real estate is precious, especially to real users\n * and not developers with high-res monitors.\n */\nexport function toHumanFriendlyString(x: string) {\n  const previewLength = 4;\n\n  const previewPrefix = x.substring(0, previewLength);\n  const previewSuffix = x.substring(x.length - previewLength);\n\n  return `${previewPrefix}...${previewSuffix}`;\n}\n\nexport function fromSatoshi(x: number) {\n  return Math.floor(x) / Math.pow(10, 8);\n}\n\nexport function toSatoshi(x: number) {\n  return Math.floor(x * Math.pow(10, 8));\n}\n\nexport function toAssetHash(x: Buffer): string {\n  const withoutFirstByte = x.slice(1);\n  return withoutFirstByte.reverse().toString('hex');\n}\n","import React, { useState, useRef } from 'react';\n\nimport { networks, Network, payments, address, ECPair } from 'liquidjs-lib';\nimport * as bip39 from 'bip39';\nimport * as bip32 from 'bip32';\n\nimport InputWithCopy from '../elements/InputWithCopy';\nimport {\n  isValidAddress,\n  isValidBlindingKey,\n  changeVersionBytes,\n} from '../helpers';\n\ninterface Props {\n  onLoad(identity: string, network: string, blindingPrivKey?: string): void;\n}\n\nconst Load: React.FunctionComponent<Props> = props => {\n  const [isLiquid, setIsLiquid] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [showBlinding, setShowBlinding] = useState(false);\n  const [blindingPubkey, setBlindingPubkey] = useState('');\n\n  const pubkey = useRef(null);\n  const blindingPrivKey = useRef(null);\n\n  const networkString: string = isLiquid ? 'liquid' : 'regtest';\n  const currentNetwork: Network = (networks as any)[networkString];\n\n  const onAddressInputChange = (value: string) => {\n    try {\n      const { blindingKey } = address.fromConfidential(value);\n      setShowBlinding(true);\n      setBlindingPubkey(blindingKey.toString('hex'));\n    } catch (ignore) {\n      setShowBlinding(false);\n    }\n  };\n\n  const checkInput = () => {\n    if (!pubkey || !pubkey.current) return alert('Missing address');\n\n    const pub: any = (pubkey.current as any).value;\n    if (!isValidAddress(pub, currentNetwork))\n      return alert('Given address is not a valid segwit address');\n\n    if (showBlinding) {\n      if (!blindingPrivKey || !blindingPrivKey.current)\n        return alert('Missing blinding key');\n\n      const blinding: any = (blindingPrivKey.current as any).value;\n      if (!isValidBlindingKey(blinding))\n        return alert('Given blinding key is not valid');\n\n      const blindKeyPair = ECPair.fromPrivateKey(Buffer.from(blinding, 'hex'));\n      if (blindKeyPair.publicKey.toString('hex') !== blindingPubkey)\n        return alert(\n          'Given blinding private key do not corresponds to the given address'\n        );\n\n      return props.onLoad(pub, networkString, blinding);\n    }\n\n    props.onLoad(pub, networkString);\n  };\n\n  const confirmModal = () => {\n    const mnemonic = bip39.generateMnemonic();\n    if (!bip39.validateMnemonic(mnemonic)) return alert('Something went wrong');\n\n    const seed = bip39.mnemonicToSeedSync(mnemonic);\n    const root = bip32.fromSeed(seed, currentNetwork);\n    const xpub = root.toBase58();\n    const version = isLiquid ? 'zpub' : 'vpub';\n    const extPub = changeVersionBytes(xpub, version);\n\n    return (\n      <div className=\"modal is-active\">\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">\n              Liquid {`${!isLiquid ? 'regtest' : ''}`} wallet\n            </p>\n          </header>\n          <section className=\"modal-card-body\">\n            <label className=\"label\">Mnemonic</label>\n            <p className=\"subtitle is-6\">\n              You will never see it again. You may want to write it down\n            </p>\n            <InputWithCopy value={mnemonic} bgColor=\"is-info is-light\" />\n            <p className=\"subtitle is-6\">\n              The derivation path used for generating the address is{' '}\n              <b>m/84'/0'/0'/0</b>\n            </p>\n            <label className=\"label\">Extended public key</label>\n            <InputWithCopy value={extPub} bgColor=\"is-info is-light\" />\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button\n              className=\"button is-primary\"\n              onClick={() => {\n                const node = root.derivePath(\"m/84'/0'/0'/0\");\n                const wpkh = payments.p2wpkh({\n                  pubkey: node.publicKey,\n                  network: currentNetwork,\n                });\n\n                props.onLoad(wpkh.address!, networkString);\n              }}\n            >\n              Confirm\n            </button>\n            <button className=\"button\" onClick={() => setShowConfirm(false)}>\n              Cancel\n            </button>\n          </footer>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"column has-text-centered is-10-mobile is-6-desktop is-offset-1-mobile is-offset-3-desktop\">\n      <div className=\"field\" onClick={() => setIsLiquid(!isLiquid)}>\n        <input\n          type=\"checkbox\"\n          className=\"switch is-medium is-link\"\n          checked={isLiquid}\n          onChange={() => {}}\n        />\n        <label className=\"label\">{`${isLiquid ? 'Liquid' : 'Regtest'}`}</label>\n      </div>\n      <input\n        type=\"text\"\n        ref={pubkey}\n        className=\"input is-medium mb-6\"\n        onChange={(e: any) => onAddressInputChange(e.target.value)}\n        placeholder=\"Your native segwit address here...\"\n      />\n      {showBlinding && (\n        <input\n          type=\"text\"\n          ref={blindingPrivKey}\n          className=\"input is-medium mb-6\"\n          placeholder=\"Your private blinding key here (hex format)...\"\n        />\n      )}\n      <br />\n      <br />\n      <button className=\"button is-link is-large\" onClick={checkInput}>\n        Load\n      </button>\n      <br />\n      <br />\n      <div>\n        <p className=\"subtitle\">or create a new one...</p>\n        <button\n          className=\"button is-primary is-large\"\n          onClick={() => setShowConfirm(true)}\n        >\n          Generate\n        </button>\n        {showConfirm && confirmModal()}\n      </div>\n    </div>\n  );\n};\n\nexport default Load;\n","import React, { useState } from 'react';\nimport { copyToClipboard } from 'copy-lite';\n\ninterface Props {\n  value: string;\n  label?: string;\n  textClass?: string;\n}\nexport const TextWithCopy: React.FunctionComponent<Props> = props => {\n  const [copySuccess, setCopySuccess] = useState('');\n\n  const copy = () => {\n    copyToClipboard(props.value);\n    setCopySuccess('👌 Copied!');\n    setTimeout(() => setCopySuccess(''), 1500);\n  };\n\n  const textClass = props.textClass ? props.textClass : 'subtitle';\n\n  return (\n    <span onClick={copy}>\n      <p className={textClass}>\n        {props.label || props.value} {copySuccess}\n      </p>\n    </span>\n  );\n};\n\nexport default TextWithCopy;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport TextWithCopy from '../elements/TextWithCopy';\nimport { validate, toHumanFriendlyString } from '../helpers';\nimport { networks } from 'liquidjs-lib';\n\ninterface Props {\n  network: string;\n  utxos: Object;\n  lbtc: string;\n  inputs: Array<any>;\n  outputs: Array<any>;\n  onEncode(inputs: Array<any>, outputs: Array<any>): void;\n  onSign?(): void;\n}\n\nconst Update: React.FunctionComponent<Props> = props => {\n  const { utxos: utxosByAsset, lbtc, network } = props;\n\n  const [inputAssetIndex, setInputAssetIndex] = useState(0);\n  const [utxoIndex, setUtxoIndex] = useState(0);\n  const [inputs, setInputs] = useState(props.inputs);\n  const [outputs, setOutputs] = useState(props.outputs);\n\n  const assets: Array<string> = Object.keys(utxosByAsset);\n  const utxos: Array<any> = (utxosByAsset as any)[assets[inputAssetIndex]];\n\n  const addInput = (e: any) => {\n    e.preventDefault();\n    setInputs((is: any) => is.concat([utxos[utxoIndex]]));\n  };\n  const onAssetChange = (e: any) => {\n    setInputAssetIndex(e.target.value);\n    setUtxoIndex(0);\n  };\n  const onUtxoChange = (e: any) => setUtxoIndex(e.target.value);\n\n  const { register, handleSubmit, errors, setError } = useForm();\n\n  const addOutput = ({\n    amount,\n    asset,\n    address,\n  }: {\n    amount: number;\n    asset: string;\n    address: string;\n  }) => {\n    if (!validate(asset, 'asset')) {\n      setError('asset' as any);\n      return;\n    }\n\n    if (!validate(address, 'address', (networks as any)[network])) {\n      setError('address' as any);\n      return;\n    }\n\n    if (!validate(amount, 'amount')) {\n      setError('amount' as any);\n      return;\n    }\n\n    setOutputs((os: any) =>\n      os.concat([\n        {\n          value: amount,\n          asset,\n          address,\n        },\n      ])\n    );\n  };\n\n  const removeInput = (index: number) =>\n    setInputs(inputs.filter((_o: any, i: number) => i !== index));\n  const removeOutput = (index: number) =>\n    setOutputs(outputs.filter((_o: any, i: number) => i !== index));\n\n  const addFeeOutput = () => {\n    const amount = prompt('Enter the amount in satoshis to cover fees');\n    if (!amount || isNaN(Number(amount)) || Number(amount) <= 0)\n      return alert('Not a valid number');\n    setOutputs((os: any) =>\n      os.concat([\n        {\n          value: amount,\n          address: 'LBTC_FEES',\n          asset: lbtc,\n        },\n      ])\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"box\">\n        <h1 className=\"title\">Inputs</h1>\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded has-text-centered\">\n            <label className=\"label\">Asset</label>\n            <div className=\"select is-info is-medium is-fullwidth\">\n              <select value={inputAssetIndex} onChange={onAssetChange}>\n                {assets.map((a: any, i: number) => (\n                  <option key={i} value={i}>\n                    {a === lbtc ? 'L-BTC' : toHumanFriendlyString(a)}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"control is-expanded has-text-centered\">\n            <label className=\"label\">Unspent</label>\n            <div className=\"select is-info is-medium is-fullwidth\">\n              <select value={utxoIndex} onChange={onUtxoChange}>\n                {utxos.map((u: any, i: number) => (\n                  <option key={i} value={i}>\n                    {toHumanFriendlyString(u.txid) + ' ' + u.value}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"control\">\n            <label style={{ visibility: 'hidden' }} className=\"label\">\n              <span role=\"img\" aria-label=\"vulpem\">\n                🦊\n              </span>\n            </label>\n            <button className=\"button is-link is-medium\" onClick={addInput}>\n              {' '}\n              Add{' '}\n            </button>\n          </div>\n        </div>\n\n        <span>\n          {inputs.map((i: any, index: number) => (\n            <div key={index} className=\"field has-addons\">\n              <button\n                className=\"button is-medium is-fullwidth\"\n                style={{ borderColor: 'transparent' }}\n              >\n                <TextWithCopy\n                  label={\n                    i.asset === lbtc ? 'L-BTC' : toHumanFriendlyString(i.asset)\n                  }\n                  value={i.asset}\n                />\n              </button>\n              <button\n                className=\"button is-medium is-fullwidth\"\n                style={{ borderColor: 'transparent' }}\n              >\n                <TextWithCopy\n                  label={toHumanFriendlyString(i.txid) + ' ' + i.value}\n                  value={i.txid}\n                />\n              </button>\n              <button\n                className=\"button is-danger\"\n                onClick={() => removeInput(index)}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </span>\n      </div>\n\n      <div className=\"box\">\n        <div className=\"columns\">\n          <div className=\"column is-6 is-offset-3\">\n            <h1 className=\"title\">Outputs</h1>\n          </div>\n          <div className=\"column is-3\">\n            <button className=\"button is-pulled-right\" onClick={addFeeOutput}>\n              Add Fee output\n            </button>\n          </div>\n        </div>\n\n        <form\n          className=\"form\"\n          onSubmit={handleSubmit((data: any) => addOutput(data))}\n        >\n          <div className=\"field has-addons\">\n            <div className=\"control is-expanded has-text-centered\">\n              <label className=\"label\">Asset</label>\n              <input\n                className=\"input is-medium is-fullwidth\"\n                type=\"text\"\n                name=\"asset\"\n                placeholder=\"Asset hash\"\n                ref={register({ required: true })}\n              />\n              {errors.asset && (\n                <div className=\"notification is-danger\">\n                  This field is not valid\n                </div>\n              )}\n            </div>\n            <div className=\"control is-expanded has-text-centered\">\n              <label className=\"label\">Address</label>\n              <input\n                className=\"input is-medium is-fullwidth\"\n                name=\"address\"\n                type=\"text\"\n                placeholder=\"Unconfidential address only\"\n                ref={register({ required: true })}\n              />\n              {errors.address && (\n                <div className=\"notification is-danger\">\n                  This field is not valid\n                </div>\n              )}\n            </div>\n            <div className=\"control is-expanded has-text-centered\">\n              <label className=\"label\">Amount</label>\n              <input\n                className=\"input is-medium is-fullwidth\"\n                name=\"amount\"\n                type=\"number\"\n                placeholder=\"In satoshis\"\n                ref={register({ required: true })}\n              />\n              {errors.amount && (\n                <div className=\"notification is-danger\">\n                  This field is not valid\n                </div>\n              )}\n            </div>\n            <div className=\"control\">\n              <label style={{ visibility: 'hidden' }} className=\"label\">\n                <span role=\"img\" aria-label=\"vulpem\">\n                  🦊\n                </span>\n              </label>\n              <button type=\"submit\" className=\"button is-link is-medium\">\n                {' '}\n                Add{' '}\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <span>\n          <br />\n          {outputs.map((o: any, index: number) => (\n            <div key={index} className=\"field has-addons\">\n              <button\n                className=\"button is-medium is-fullwidth\"\n                style={{ borderColor: 'transparent' }}\n              >\n                <TextWithCopy\n                  label={toHumanFriendlyString(o.asset)}\n                  value={o.asset}\n                />\n              </button>\n              <button\n                className=\"button is-medium is-fullwidth\"\n                style={{ borderColor: 'transparent' }}\n              >\n                <TextWithCopy\n                  label={toHumanFriendlyString(o.address)}\n                  value={o.address}\n                />\n              </button>\n              <button\n                className=\"button is-medium is-fullwidth\"\n                style={{ borderColor: 'transparent' }}\n              >\n                <TextWithCopy label={o.value} value={o.value} />\n              </button>\n              <button\n                className=\"button is-danger\"\n                onClick={() => removeOutput(index)}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </span>\n      </div>\n\n      <div className=\"box is-centered\">\n        <p className=\"subtitle\"> Total inputs {inputs.length} </p>\n        <p className=\"subtitle\"> Total outputs {outputs.length} </p>\n        <button\n          className=\"button is-large\"\n          onClick={() => props.onEncode(inputs, outputs)}\n        >\n          <span role=\"img\" aria-label=\"encode psbt\">\n            🚜\n          </span>\n          ‍Encode\n        </button>\n        <button className=\"button is-large\" onClick={props.onSign!}>\n          <span role=\"img\" aria-label=\"sign psbt\">\n            ✍\n          </span>\n          Sign\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Update;\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import {\n  ECPair,\n  Psbt,\n  confidential,\n  address,\n  payments,\n  Network,\n  Transaction,\n  ECPairInterface,\n} from 'liquidjs-lib';\nimport * as bip39 from 'bip39';\nimport * as bip32 from 'bip32';\nimport { toAssetHash, isValidBlindingKey } from '../helpers';\nconst fetch = window.fetch;\n\nexport const EXPLORER_URL = {\n  liquid: 'https://blockstream.info/liquid/api',\n  regtest: 'https://nigiri.network/liquid/api',\n};\n\ninterface UtxoInterface {\n  txid: string;\n  vout: number;\n  asset: string;\n  value: number;\n  script?: string;\n  partialSig?: Array<any>;\n  sighashType?: number;\n}\n\nexport default class LiquidWallet {\n  scriptPubKey: string;\n  blindingKey?: string;\n  address: string;\n  network: Network;\n\n  constructor(identity: string, network: Network, blindingKey?: string) {\n    try {\n      address.toOutputScript(identity, network);\n      if (blindingKey && !isValidBlindingKey)\n        throw new Error('Invalid blinding key');\n    } catch (ignore) {\n      throw new Error('Invalid address');\n    }\n\n    const payOpts = blindingKey\n      ? { confidentialAddress: identity }\n      : { address: identity };\n    const payment = payments.p2wpkh({ ...payOpts, network });\n    this.scriptPubKey = payment.output!.toString('hex');\n    this.address = payment.address!;\n    this.network = network;\n    this.blindingKey = blindingKey;\n  }\n\n  static createTx(): string {\n    const psbt = new Psbt();\n    return psbt.toBase64();\n  }\n\n  static isValidMnemonic(m: string): boolean {\n    return bip39.validateMnemonic(m);\n  }\n\n  static isValidWIF(wif: string, network: Network): boolean {\n    try {\n      ECPair.fromWIF(wif, network);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  decodeTx(psbtBase64: string): any {\n    let psbt: Psbt;\n    try {\n      psbt = Psbt.fromBase64(psbtBase64);\n    } catch (ignore) {\n      throw new Error('Invalid psbt');\n    }\n\n    const bufferTx: Buffer = psbt.data.globalMap.unsignedTx.toBuffer();\n    const transaction: Transaction = Transaction.fromBuffer(bufferTx);\n\n    let inputs: Array<UtxoInterface> = [],\n      outputs: Array<any> = [];\n\n    psbt.data.inputs.forEach((i, index) => {\n      const txid = transaction.ins[index].hash.reverse().toString('hex');\n      const vout = transaction.ins[index].index;\n      const script = i.witnessUtxo!.script.toString('hex');\n      const value = confidential.confidentialValueToSatoshi(\n        i.witnessUtxo?.value!\n      );\n      const asset = toAssetHash(i.witnessUtxo?.asset!);\n      const partialSig = i.partialSig;\n      const sighashType = i.sighashType;\n\n      inputs.push({\n        txid,\n        vout,\n        value,\n        asset,\n        script,\n        partialSig,\n        sighashType,\n      });\n    });\n\n    transaction.outs.forEach(o => {\n      const asset = toAssetHash(o.asset);\n      const value = confidential.confidentialValueToSatoshi(o.value);\n\n      const addr = o.script.equals(Buffer.alloc(0))\n        ? 'LBTC_FEES'\n        : address.fromOutputScript(o.script, this.network);\n\n      outputs.push({\n        asset,\n        value,\n        address: addr,\n      });\n    });\n\n    return {\n      inputs,\n      outputs,\n    };\n  }\n\n  updateTx(\n    psbtBase64: string,\n    inputs: Array<UtxoInterface>,\n    outputs: Array<any>\n  ): string {\n    let psbt: Psbt;\n    try {\n      psbt = Psbt.fromBase64(psbtBase64);\n    } catch (ignore) {\n      throw new Error('Invalid psbt');\n    }\n\n    inputs.forEach((i: UtxoInterface) =>\n      psbt.addInput({\n        hash: i.txid,\n        index: i.vout,\n        witnessUtxo: {\n          script: i.script\n            ? Buffer.from(i.script, 'hex')\n            : Buffer.from(this.scriptPubKey, 'hex'),\n          asset: Buffer.concat([\n            Buffer.from('01', 'hex'), //prefix for unconfidential asset\n            Buffer.from(i.asset, 'hex').reverse(),\n          ]),\n          value: confidential.satoshiToConfidentialValue(Number(i.value)),\n          nonce: Buffer.from('00', 'hex'),\n        },\n        partialSig: i.partialSig || [],\n        sighashType: i.sighashType || Transaction.SIGHASH_ALL,\n      })\n    );\n\n    outputs.forEach(o => {\n      const script =\n        o.address === 'LBTC_FEES'\n          ? Buffer.alloc(0)\n          : address.toOutputScript(o.address, this.network);\n\n      psbt.addOutput({\n        script: script,\n        asset: Buffer.concat([\n          Buffer.from('01', 'hex'), //prefix for unconfidential asset\n          Buffer.from(o.asset, 'hex').reverse(),\n        ]),\n        value: confidential.satoshiToConfidentialValue(Number(o.value)),\n        nonce: Buffer.from('00', 'hex'),\n      } as any);\n    });\n\n    return psbt.toBase64();\n  }\n\n  signPsbtWithMnemonic(psbtBase64: string, mnemonic: string) {\n    const seed = bip39.mnemonicToSeedSync(mnemonic!);\n    const root = bip32.fromSeed(seed, this.network);\n    const node = root.derivePath(\"m/84'/0'/0'/0\");\n    const keyPair = ECPair.fromWIF(node.toWIF(), this.network);\n    const decoded = Psbt.fromBase64(psbtBase64);\n    return this.sign(decoded, keyPair);\n  }\n\n  signPsbtWithPrivateKey(psbtBase64: string, wif: string) {\n    const keyPair = ECPair.fromWIF(wif, this.network);\n    const decoded = Psbt.fromBase64(psbtBase64);\n    return this.sign(decoded, keyPair);\n  }\n\n  private sign(psbt: Psbt, keyPair: ECPairInterface) {\n    const signedPsbt = this.partiallySign(psbt, keyPair);\n\n    const hex = signedPsbt.extractTransaction().toHex();\n    return hex;\n  }\n\n  private partiallySign(psbt: Psbt, keyPair: ECPairInterface) {\n    psbt.data.inputs.forEach((input: any, index: number) => {\n      if (input.partialSig && input.partialSig.length > 0) {\n        psbt.validateSignaturesOfInput(index);\n        psbt.finalizeInput(index);\n        return;\n      }\n\n      try {\n        psbt.signInput(index, keyPair);\n        psbt.validateSignaturesOfInput(index);\n        psbt.finalizeInput(index);\n      } catch (ignore) {\n        console.warn(ignore);\n      }\n    });\n\n    return psbt;\n  }\n}\n\nexport function fetchUtxos(address: string, url: string): Promise<any> {\n  return fetch(`${url}/address/${address}/utxo`).then(r => r.json());\n}\n\nexport async function unblindUtxos(\n  utxos: Array<any>,\n  blindingKey: string,\n  url: string\n) {\n  const promises = utxos.map(utxo =>\n    fetch(`${url}/tx/${utxo.txid}/hex`)\n      .then(r => r.text())\n      .then((txHex: string) => {\n        const prevTx = Transaction.fromHex(txHex);\n        const prevOut = prevTx.outs[utxo.vout];\n        return { prevOut, utxo };\n      })\n  );\n  try {\n    const prevOuts = await Promise.all(promises);\n    const unblinds = prevOuts.map((po: any) => {\n      const { prevOut, utxo } = po;\n      const result = confidential.unblindOutput(\n        prevOut.nonce,\n        Buffer.from(blindingKey, 'hex'),\n        prevOut.rangeProof!,\n        prevOut.value,\n        prevOut.asset,\n        prevOut.script\n      );\n      const assetHash = result.asset.reverse().toString('hex');\n      return { ...result, asset: assetHash, txid: utxo.txid, vout: utxo.vout };\n    });\n    return unblinds;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport function faucet(address: string, url: string): Promise<any> {\n  return fetch(`${url}/faucet`, {\n    method: 'POST',\n    mode: 'no-cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ address }),\n  });\n}\n\nexport function mint(\n  address: string,\n  quantity: number,\n  url: string\n): Promise<any> {\n  return fetch(`${url}/mint`, {\n    method: 'POST',\n    mode: 'no-cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ address, quantity }),\n  });\n}\nexport async function fetchBalances(\n  address: string,\n  url: string,\n  blindingKey?: string\n): Promise<any> {\n  let fetchedData = (await fetchUtxos(address, url)).map((utxo: any) => {\n    return utxo;\n  });\n\n  if (blindingKey && isValidBlindingKey(blindingKey)) {\n    fetchedData = await unblindUtxos(fetchedData, blindingKey, url);\n  }\n\n  const balances = fetchedData.reduce(\n    (storage: { [x: string]: any }, item: { [x: string]: any; value: any }) => {\n      // get the first instance of the key by which we're grouping\n      var group = item['asset'];\n\n      // set `storage` for this instance of group to the outer scope (if not empty) or initialize it\n      storage[group] = storage[group] || 0;\n\n      // add this item to its group within `storage`\n      storage[group] += item.value;\n\n      // return the updated storage to the reduce function, which will then loop through the next\n      return storage;\n    },\n    {}\n  ); // {} is the initial value of the storage\n\n  const utxos = fetchedData.reduce(\n    (storage: { [x: string]: any }, item: { [x: string]: any; value: any }) => {\n      // get the first instance of the key by which we're grouping\n      var group = item['asset'];\n\n      // set `storage` for this instance of group to the outer scope (if not empty) or initialize it\n      storage[group] = storage[group] || [];\n\n      // add this item to its group within `storage`\n      storage[group].push(item);\n\n      // return the updated storage to the reduce function, which will then loop through the next\n      return storage;\n    },\n    {}\n  ); // {} is the initial value of the storage\n\n  return {\n    balances,\n    utxos,\n  };\n}\n","import React, { useState } from 'react';\nimport { networks } from 'liquidjs-lib';\n\nimport Update from './UpdateTx';\nimport Wallet from '../wallet';\nimport InputWithCopy from '../elements/InputWithCopy';\n\ninterface Props {\n  identity: string;\n  blindingKey?: string;\n  network: string;\n  utxos: Object;\n  lbtc: string;\n}\n\nconst Create: React.FunctionComponent<Props> = props => {\n  const { identity, network, lbtc, utxos, blindingKey } = props;\n\n  const currentNetwork = (networks as any)[network];\n  const wallet = new Wallet(identity, currentNetwork, blindingKey);\n\n  const [encoded, setEncoded] = useState('');\n\n  const onEncode = (inputs: any[], outputs: any[]) => {\n    const emptyPsbt = Wallet.createTx();\n    const psbt = wallet.updateTx(emptyPsbt, inputs, outputs);\n    setEncoded(psbt);\n  };\n\n  const onSign = () => {\n    if (encoded.length === 0)\n      return alert('Encode the transaction on every change before signing');\n\n    const mnemonicOrWif = prompt('Enter your mnemonic or WIF private key');\n    if (Wallet.isValidMnemonic(mnemonicOrWif!)) {\n      try {\n        const hex = wallet.signPsbtWithMnemonic(encoded, mnemonicOrWif!);\n        setEncoded(hex);\n        return;\n      } catch (ignore) {\n        return alert(ignore);\n      }\n    }\n\n    if (Wallet.isValidWIF(mnemonicOrWif!, currentNetwork)) {\n      try {\n        const hex = wallet.signPsbtWithPrivateKey(encoded, mnemonicOrWif!);\n        setEncoded(hex);\n        return;\n      } catch (ignore) {\n        return alert(ignore);\n      }\n    }\n\n    return alert('Mnemonic or WIF not valid');\n  };\n\n  return (\n    <div>\n      <Update\n        network={network}\n        lbtc={lbtc}\n        utxos={utxos}\n        inputs={[]}\n        outputs={[]}\n        onEncode={onEncode}\n        onSign={onSign}\n      />\n      {encoded.length > 0 && (\n        <div className=\"box\">\n          {' '}\n          <InputWithCopy value={encoded} />{' '}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Create;\n","import React, { useRef, useState } from 'react';\nimport { networks } from 'liquidjs-lib';\n\nimport Update from './UpdateTx';\nimport Wallet from '../wallet';\nimport InputWithCopy from '../elements/InputWithCopy';\n\ninterface Props {\n  identity: string;\n  blindingKey?: string;\n  network: string;\n  utxos: Object;\n  lbtc: string;\n}\n\nconst Decode: React.FunctionComponent<Props> = props => {\n  const { identity, network, lbtc, utxos, blindingKey } = props;\n\n  const currentNetwork = (networks as any)[network];\n  const wallet = new Wallet(identity, currentNetwork, blindingKey);\n\n  const [state, setState] = useState({\n    hasBeenDecoded: false,\n    inputs: [],\n    outputs: [],\n  });\n  const [encoded, setEncoded] = useState('');\n  const psbtInput = useRef(null);\n\n  const onDecodeClick = (e: any) => {\n    e.preventDefault();\n    const { inputs, outputs } = wallet.decodeTx(\n      (psbtInput.current! as any).value\n    );\n    setState({\n      hasBeenDecoded: true,\n      inputs,\n      outputs,\n    });\n  };\n\n  const onEncode = (inputs: any[], outputs: any[]) => {\n    const emptyPsbt = Wallet.createTx();\n    const psbt = wallet.updateTx(emptyPsbt, inputs, outputs);\n    setEncoded(psbt);\n  };\n\n  const onSign = () => {\n    if (encoded.length === 0)\n      return alert('Encode the transaction on every change before signing');\n\n    const mnemonicOrWif = prompt('Enter your mnemonic or WIF private key');\n    if (Wallet.isValidMnemonic(mnemonicOrWif!)) {\n      try {\n        const hex = wallet.signPsbtWithMnemonic(encoded, mnemonicOrWif!);\n        setEncoded(hex);\n        return;\n      } catch (ignore) {\n        return alert(ignore);\n      }\n    }\n\n    if (Wallet.isValidWIF(mnemonicOrWif!, currentNetwork)) {\n      try {\n        const hex = wallet.signPsbtWithPrivateKey(encoded, mnemonicOrWif!);\n        setEncoded(hex);\n        return;\n      } catch (ignore) {\n        return alert(ignore);\n      }\n    }\n\n    return alert('Mnemonic or WIF not valid');\n  };\n\n  return (\n    <div>\n      <div className=\"field has-addons\">\n        <input\n          type=\"text\"\n          ref={psbtInput}\n          className=\"input is-medium\"\n          placeholder=\"Your base64 encoded PSBT here...\"\n        />\n        <button className=\"button is-link is-medium\" onClick={onDecodeClick}>\n          Decode\n        </button>\n      </div>\n\n      {state.hasBeenDecoded && (\n        <Update\n          network={network}\n          lbtc={lbtc}\n          utxos={utxos}\n          inputs={state.inputs}\n          outputs={state.outputs}\n          onEncode={onEncode}\n          onSign={onSign}\n        />\n      )}\n\n      {encoded.length > 0 && (\n        <div className=\"box\">\n          {' '}\n          <InputWithCopy value={encoded} />{' '}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Decode;\n","import React from 'react';\n\ninterface Props {\n  asset: string;\n  balance: number;\n}\n\nconst Circle: React.FunctionComponent<Props> = props => {\n  return (\n    <div\n      className=\"hero box is-inline-block has-background-link\"\n      style={{\n        borderRadius: '50%',\n        height: '250px',\n        width: '250px',\n        margin: '2rem',\n      }}\n    >\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <p className=\"subtitle is-5 has-text-white\"> {props.asset}</p>\n          <h1 className=\"title is-2 has-text-white\">\n            {' '}\n            {props.balance.toLocaleString('en-US', {\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 8,\n            })}{' '}\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Circle;\n","import React from 'react';\n\nimport Circle from './Circle';\nimport { toHumanFriendlyString, fromSatoshi } from '../helpers';\n\ninterface Props {\n  balances: any;\n  lbtc: string;\n}\n\nconst Balances: React.FunctionComponent<Props> = props => {\n  return (\n    <div>\n      <p className=\"subtitle is-4\">Balances</p>\n      <div className=\"buttons is-centered\">\n        {Object.entries(props.balances).map(\n          ([assetHash, balanceInSatoshis]: [string, any], index: number) => {\n            let asset: string;\n            if (assetHash === props.lbtc) asset = 'L-BTC';\n            else asset = toHumanFriendlyString(assetHash);\n\n            return (\n              <Circle\n                key={index}\n                balance={fromSatoshi(balanceInSatoshis)}\n                asset={asset}\n              />\n            );\n          }\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Balances;\n","import React from 'react';\n\ninterface Props {}\n\nconst Spinner: React.FunctionComponent<Props> = () => (\n  <section className=\"section\">\n    <div className=\"buttons is-centered\">\n      <span className=\"loader\"></span>\n    </div>\n  </section>\n);\n\nexport default Spinner;\n","import React from 'react';\n\nimport Create from './CreateTx';\nimport Decode from './DecodeTx';\n\nimport Balances from '../elements/Balances';\nimport Spinner from '../elements/Spinner';\n\nimport { fetchBalances, faucet, EXPLORER_URL, mint } from '../wallet';\nimport { networks, address } from 'liquidjs-lib';\nimport TextWithCopy from '../elements/TextWithCopy';\n\ninterface Props {\n  identity: string;\n  network: string;\n  explorerUrl?: string;\n  blindingKey?: string;\n}\n\ninterface State {\n  showCreate: Boolean;\n  showImport: Boolean;\n  hasBalances: Boolean;\n  isLoading: Boolean;\n  utxos: any;\n  balances: any;\n}\n\nexport default class Wallet extends React.Component<Props, State> {\n  state = {\n    showCreate: false,\n    showImport: false,\n    hasBalances: false,\n    balances: {},\n    utxos: {},\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.getBalances();\n  }\n\n  getBalances = () => {\n    this.setState({ isLoading: true });\n\n    const { identity, network, explorerUrl, blindingKey } = this.props;\n    fetchBalances(\n      identity,\n      explorerUrl || (EXPLORER_URL as any)[network],\n      blindingKey\n    )\n      .then((data: any) => {\n        if (Object.keys(data.utxos).length > 0)\n          this.setState({\n            balances: data.balances,\n            utxos: data.utxos,\n            hasBalances: true,\n            isLoading: false,\n          });\n        else this.setState({ isLoading: false });\n\n        return;\n      })\n      .catch(e => {\n        console.error(e);\n        alert('Something went wrong. Explorer may be down');\n        this.setState({ isLoading: false });\n      });\n  };\n\n  callFaucet = () => {\n    this.setState({ isLoading: true });\n\n    faucet(this.props.identity, this.props.explorerUrl || EXPLORER_URL.regtest)\n      .then(() => {\n        return this.getBalances();\n      })\n      .catch(e => {\n        console.error(e);\n        alert('Something went wrong. Explorer may be down');\n        this.setState({ isLoading: false });\n      });\n  };\n\n  callMint = () => {\n    this.setState({ isLoading: true });\n\n    const qtyString = prompt('How many asset you want to issue?');\n\n    if (!qtyString || isNaN(Number(qtyString))) {\n      alert('You need to pass a valid amount');\n      this.setState({ isLoading: false });\n      return;\n    }\n\n    mint(\n      this.props.identity,\n      Number(qtyString),\n      this.props.explorerUrl || EXPLORER_URL.regtest\n    )\n      .then(() => {\n        return this.getBalances();\n      })\n      .catch(e => {\n        console.error(e);\n        alert('Something went wrong. Explorer may be down');\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    const { network, identity, blindingKey } = this.props;\n    const {\n      showCreate,\n      showImport,\n      balances,\n      hasBalances,\n      isLoading,\n      utxos,\n    } = this.state;\n\n    const LBTC_ASSET_HASH = (networks as any)[network].assetHash;\n    const isRegtest = network === 'regtest';\n\n    return (\n      <div className=\"column has-text-centered\">\n        <TextWithCopy value={identity} textClass=\"title is-5\" />\n\n        {blindingKey && (\n          <span>\n            <br />\n            <p className=\"title is-6\">UNCONFIDENTIAL</p>\n            <TextWithCopy\n              value={address.fromConfidential(identity).unconfidentialAddress}\n              textClass=\"title is-5\"\n            />\n            <br />\n            <br />\n          </span>\n        )}\n\n        {!isLoading && hasBalances && (\n          <Balances balances={balances} lbtc={LBTC_ASSET_HASH} />\n        )}\n        <br />\n        {!isLoading && !hasBalances && (\n          <p className=\"subtitle is-6\">\n            {' '}\n            You don't have any unspent output. Your balances will appear here.{' '}\n          </p>\n        )}\n\n        {isRegtest && !hasBalances && !isLoading && (\n          <button className=\"button is-link\" onClick={this.callFaucet}>\n            <span role=\"img\" aria-label=\"create\">\n              🚰\n            </span>{' '}\n            Faucet\n          </button>\n        )}\n\n        {isRegtest && !isLoading && (\n          <button className=\"button is-link\" onClick={this.callMint}>\n            <span role=\"img\" aria-label=\"create\">\n              💸\n            </span>{' '}\n            Mint\n          </button>\n        )}\n\n        {!hasBalances && !isLoading && (\n          <button className=\"button\" onClick={this.getBalances}>\n            <span role=\"img\" aria-label=\"create\">\n              ♻\n            </span>{' '}\n            Reload\n          </button>\n        )}\n\n        {isLoading && <Spinner />}\n\n        {hasBalances && (\n          <section className=\"section\">\n            <p className=\"subtitle is-4\">Transaction</p>\n            <button\n              className={`button is-large ${!isLoading &&\n                showCreate &&\n                `is-link`}`}\n              onClick={() =>\n                this.setState({\n                  showCreate: true,\n                  showImport: false,\n                })\n              }\n            >\n              <span role=\"img\" aria-label=\"create\">\n                🛠\n              </span>{' '}\n              Create\n            </button>\n            <button\n              className={`button is-large ${!isLoading &&\n                showImport &&\n                `is-link`}`}\n              onClick={() =>\n                this.setState({\n                  showImport: true,\n                  showCreate: false,\n                })\n              }\n            >\n              <span role=\"img\" aria-label=\"import\">\n                📀\n              </span>{' '}\n              Import\n            </button>\n          </section>\n        )}\n        {!isLoading && showCreate && (\n          <Create\n            utxos={utxos}\n            lbtc={LBTC_ASSET_HASH}\n            identity={identity}\n            network={network}\n            blindingKey={blindingKey}\n          />\n        )}\n        {!isLoading && showImport && (\n          <Decode\n            utxos={utxos}\n            lbtc={LBTC_ASSET_HASH}\n            identity={identity}\n            network={network}\n            blindingKey={blindingKey}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport Layout from './components/Layout';\nimport Load from './components/Load';\nimport Wallet from './components/Wallet';\nimport useGlobalStorage from 'use-global-storage';\n\ninterface Props {}\n\nconst App: React.FunctionComponent<Props> = () => {\n  const useStorage = useGlobalStorage({\n    storageOptions: { name: 'liquid-coach-db' },\n  });\n\n  const [state, setState] = useStorage('state', null);\n\n  return (\n    <div>\n      <Layout\n        title=\"🏋️‍♂️ Liquid.Coach\"\n        showExplorer={!state}\n        onExplorer={(explorer: string) => {\n          setState({\n            explorerUrl: explorer,\n          });\n        }}\n        onClean={() => {\n          setState(null);\n        }}\n      >\n        <div className=\"container\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              {!state || !state.loaded ? (\n                <Load\n                  onLoad={(\n                    xpubOrAddress: string,\n                    selectedNetwork: any,\n                    blindingPrivKey: string\n                  ) => {\n                    setState({\n                      loaded: true,\n                      identity: xpubOrAddress,\n                      network: selectedNetwork,\n                      blindingKey: blindingPrivKey,\n                      ...state,\n                    });\n                  }}\n                />\n              ) : (\n                <Wallet\n                  identity={state.identity}\n                  network={state.network}\n                  blindingKey={\n                    state.blindingKey && state.blindingKey.length > 0\n                      ? state.blindingKey\n                      : undefined\n                  }\n                  explorerUrl={state.explorerUrl}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n"],"names":["Layout","changeUrl","url","prompt","length","Error","URL","includes","props","onExplorer","ignore","alert","render","withCleanButton","this","onClean","React","className","onClick","withExplorer","showExplorer","_this","withTitle","title","style","minHeight","position","paddingTop","paddingRight","paddingLeft","paddingBottom","children","bottom","height","width","display","justifyContent","alignItems","href","target","rel","Component","InputWithCopy","useState","copySuccess","setCopySuccess","bgColor","copyToClipboard","value","prefixes","Map","isValidBlindingKey","ECPair","fromPrivateKey","Buffer","from","e","validate","type","network","networks","regtest","address","fromConfidential","isValidConfidentialAddress","toOutputScript","console","error","confidential","satoshiToConfidentialValue","Number","toHumanFriendlyString","x","substring","toAssetHash","slice","reverse","toString","Load","isLiquid","setIsLiquid","showConfirm","setShowConfirm","showBlinding","setShowBlinding","blindingPubkey","setBlindingPubkey","pubkey","useRef","blindingPrivKey","networkString","currentNetwork","checked","onChange","ref","blindingKey","onAddressInputChange","placeholder","current","pub","isValidAddress","blinding","publicKey","onLoad","mnemonic","bip39","seed","root","bip32","extPub","xpub","targetFormat","has","trim","data","b58","decode","concat","get","encode","err","changeVersionBytes","toBase58","node","derivePath","wpkh","payments","p2wpkh","confirmModal","TextWithCopy","setTimeout","textClass","label","Update","utxosByAsset","utxos","lbtc","inputAssetIndex","setInputAssetIndex","utxoIndex","setUtxoIndex","inputs","setInputs","outputs","setOutputs","assets","Object","keys","useForm","register","handleSubmit","errors","setError","map","a","i","key","u","txid","visibility","role","preventDefault","is","index","borderColor","asset","filter","_o","removeInput","amount","isNaN","os","onSubmit","name","required","o","removeOutput","onEncode","onSign","Symbol","iterator","asyncIterator","fetchBalances","fetch","then","r","json","fetchUtxos","balances","fetchedData","reduce","storage","item","group","push","_fetchUtxos","utxo","unblindUtxos","promises","text","txHex","prevOut","Transaction","fromHex","outs","vout","body","recover","result","Promise","all","prevOuts","po","unblindOutput","nonce","rangeProof","script","assetHash","window","EXPLORER_URL","liquid","LiquidWallet","identity","payment","confidentialAddress","scriptPubKey","output","createTx","Psbt","toBase64","isValidMnemonic","m","isValidWIF","wif","fromWIF","decodeTx","psbtBase64","psbt","fromBase64","bufferTx","globalMap","unsignedTx","toBuffer","transaction","fromBuffer","forEach","ins","hash","witnessUtxo","confidentialValueToSatoshi","_i$witnessUtxo","_i$witnessUtxo2","partialSig","sighashType","addr","equals","alloc","fromOutputScript","updateTx","addInput","_this2","SIGHASH_ALL","addOutput","signPsbtWithMnemonic","keyPair","toWIF","decoded","sign","signPsbtWithPrivateKey","partiallySign","extractTransaction","toHex","input","validateSignaturesOfInput","finalizeInput","signInput","warn","faucet","method","mode","headers","JSON","stringify","mint","quantity","Create","wallet","Wallet","encoded","setEncoded","emptyPsbt","mnemonicOrWif","hex","Decode","hasBeenDecoded","state","setState","psbtInput","Circle","borderRadius","margin","balance","toLocaleString","minimumFractionDigits","maximumFractionDigits","Balances","entries","balanceInSatoshis","Math","floor","pow","Spinner","showCreate","showImport","hasBalances","isLoading","explorerUrl","catch","getBalances","qtyString","componentDidMount","LBTC_ASSET_HASH","isRegtest","unconfidentialAddress","callFaucet","callMint","ReactDOM","useGlobalStorage","storageOptions","useStorage","explorer","loaded","undefined","xpubOrAddress","selectedNetwork","document","getElementById"],"mappings":"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"}